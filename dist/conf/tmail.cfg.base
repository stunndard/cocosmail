#!/bin/sh


###
# Common

# Who am i (used in SMTP transaction for HELO)
export COCOSMAIL_ME="cocosmail.io"

# Base path for server files.
# If empty, will use the same directory where binary is.
export COCOSMAIL_BASE_PATH=""

# Server signature
export COCOSMAIL_HIDE_SERVER_SIGNATURE=false

# debug
export COCOSMAIL_DEBUG_ENABLED=false

# run cocosmail as cluster
# default false
export COCOSMAIL_CLUSTER_MODE_ENABLED=false

# Temporary directory (for scanning/filtering)
# RAMDISK recommended
export COCOSMAIL_TEMPDIR="/dev/shm"

# Where to log
# "stdout" for logging too stdout otherwise set a path to an *existing* directory
export COCOSMAIL_LOGPATH="stdout"

###
# nsqd

# dis|enable logging
export COCOSMAIL_NSQD_ENABLE_LOGGIN=false

# lookupd-tcp-address
# Format "IP1:PORT1;IP2:PORT2"
export COCOSMAIL_NSQ_LOOKUPD_TCP_ADDRESSES="127.0.0.1:4160"
export COCOSMAIL_NSQ_LOOKUPD_HTTP_ADDRESSES="127.0.0.1:4161"

###
# Database
#
# cocosmail currenlty support:
# 	sqlite3
#  	MySQL (and compatibles DB like percona, mariaDB)
#  	PostgreSQL

# Database driver & source
#
# Exemple
# "postgres" "user=gorm dbname=gorm sslmode=disable"
## Mysql tcp
# export COCOSMAIL_DB_SOURCE="user:passwd@tcp(ip:port)/cocosmail?parseTime=true"
# export COCOSMAIL_DB_DRIVER="mysql"
## Mysql socket
# export COCOSMAIL_DB_SOURCE="user:passwd@unix(/path/to/socket)/cocosmail?parseTime=true"
# export COCOSMAIL_DB_DRIVER="mysql"
## sqlite
# "sqlite3" "/tmp/gorm.db"
export COCOSMAIL_DB_DRIVER="sqlite3"
export COCOSMAIL_DB_SOURCE="/home/cocosmail/dist/db/cocosmail.db?_busy_timeout=60000"


##
# Store
#
# Drivers supported
# disk: source is baspath
#
export COCOSMAIL_STORE_DRIVER="disk"
export COCOSMAIL_STORE_SOURCE="/home/cocosmail/dist/store"


###
# smtpd

# launch smtpd ? (default false)
export COCOSMAIL_SMTPD_LAUNCH=true;


# Defines dnsS for smtpd to launch
# A dns is in the form
# IP:PORT:HOSTNAME:SSL:SSL_CERTIFICATE
# IP: ip address to listen to
# PORT: associated port
# HOSTNAME: used in SMTP greeting and in received message headers
# SSL: activate SSL
# if SSL is true all transactions will be encrypted
# if SSL is false transactions will be clear by default but they will be upgraded
# via STARTTLS smtp extension/cmd
# SSL_CERTIFICATE certificate file name template that will be loaded for this connection
#
#
# Example:
# 	"127.0.0.1:2525:cocosmail.io:false:cocosmail.io;127.0.0.1:4656:cool-mta.com:true:cool"
# will launch 2 smtpd deamons
# 	- one listening on 127.0.0.1:2525 without encryption (but upgradable via STARTTLS)
#     certificate will be loaded from BASEDIR/ssl/smtp-cocosmail.io.(crt/key)
# 	- one listening on 127.0.0.1:4656 with encryption
#     certificate will be loaded from BASEDIR/ssl/smtp-cool.(crt/key)
export COCOSMAIL_SMTPD_DSNS="0.0.0.0:2525:cocosmail.io:false:cocosmail.io"

# smtp server timeout in seconds
# throw a timeout if smtp client does not show signs of life
# after this delay
# Default 300 (RFC 5321 4.5.3.2.7)
export COCOSMAIL_SMTPD_SERVER_TIMEOUT=60

# Max bytes for the data cmd (max size of incoming mail)
# Default 0 unlimited
export COCOSMAIL_SMTPD_MAX_DATABYTES=50000000

# Number of relays who previously take mail in charge
# ->  preventing loops
# default 30
export COCOSMAIL_SMTPD_MAX_HOPS=50

# Maximum of RCPT TO per transaction
# when is reached serveur will reply with a 451 error (4.1.0)
# to be full RFC compliant it should be 0
export COCOSMAIL_SMTP_MAX_RCPT=0

# Drop smtp session after COCOSMAIL_SMTP_MAX_BAD_RCPT unavailable RCPT TO
# to be full RFC compliant it should be 0
export COCOSMAIL_SMTP_MAX_BAD_RCPT=0

# Number of simultaneous incoming SMTP sessions
# Default 20
export COCOSMAIL_SMTPD_CONCURRENCY_INCOMING=20

### Filters
# Clamav
export COCOSMAIL_SMTPD_SCAN_CLAMAV_ENABLED=false

# Clamd DSNS
# name:ip:port
# name:socket
export COCOSMAIL_SMTPD_SCAN_CLAMAV_DSNS="/var/run/clamav/clamd.ctl"


###
# deliverd

# Launch deliverd ?
export COCOSMAIL_DELIVERD_LAUNCH=true

# Locals addresses
#
# Formating :
# ip1SEPip2SEPip3SEP...
#
# Separator could be :
# | -> or  -> round robin
# & -> and -> fail over
# Warning: you can't mix | and &

# Examples :
# 127.0.0.1&127.0.0.2&127.0.0.3
# deliverd will start tring with 127.0.0.1, if it doesn't works it will try with 127.0.0.2 ...
#
# 127.0.0.1|127.0.0.2|127.0.0.3|127.0.0.3
# deliverd will use local IP in a random order
# If an IP is present X time this will increase its priority
#
# You must define at least one local addresse
export COCOSMAIL_DELIVERD_LOCAL_IPS="0.0.0.0"

# Local Concurrency
export COCOSMAIL_DELIVERD_LOCAL_CONCURRENCY=50

# Remote Concurrency
export COCOSMAIL_DELIVERD_REMOTE_CONCURRENCY=50

# SMTP client timeout per command
export COCOSMAIL_DELIVERD_REMOTE_TIMEOUT=300

# Default queue lifetime in minutes
# After this delay
# Bounce on temp failure
# discard if bounce failed
export COCOSMAIL_DELIVERD_QUEUE_LIFETIME=60400

# Specific queue lidetime for bounces
export COCOSMAIL_DELIVERD_QUEUE_BOUNCES_LIFETIME=10080

# COCOSMAIL_DELIVERD_REMOTE_TLS_SKIPVERIFY controls whether a client verifies the
# server's certificate chain and host name.
# If COCOSMAIL_DELIVERD_REMOTE_TLS_SKIPVERIFY is true, TLS accepts any certificate
# presented by the server and any host name in that certificate.
# In this mode, TLS is susceptible to man-in-the-middle attacks.
# Unfortunatly a lot of SMTP server have selfs signed certs so if you use cocosmail
# for sending mail you should set this value to true
export COCOSMAIL_DELIVERD_REMOTE_TLS_SKIPVERIFY=true

#Â Fallback (downgrade) to clear transaction if STARTTLS negociation failed
# default: false
export COCOSMAIL_DELIVERD_REMOTE_TLS_FALLBACK=true


# DKIM sign outgoing (remote) emails
export COCOSMAIL_DELIVERD_DKIM_SIGN=false

##
# RFC compliance

# RFC 5321 4.1.1.1 a client SHOULD start an SMTP session with the EHLO
# command
# default false
export COCOSMAIL_RFC_HELO_MANDATORY=false

# RFC 5321 2.3.5: the domain name given MUST be either a primary hostname
# (resovable) or an address
# default: true (warning a lot of SMTP clients do not send a fqn|address )
export COCOSMAIL_RFC_HELO_NEED_FQN=false


# RFC 5321 4.5.3.1.1: The maximum total length of a user name or
# other local-part is 64  octets.
export COCOSMAIL_RFC_MAILFROM_LOCALPART_SIZE=true


##
# users

# Base path for users "home". Currently ysed to store mailboxes
export COCOSMAIL_USERS_HOME_BASE="/home/cocosmail/dist/mailboxes"

# Default quota for user mailboxes in bytes (not bit)
# eg: 1G, 100M, 100K, 10000000
export COCOSMAIL_USERS_MAILBOX_DEFAULT_QUOTA="200M"

##
# HTTP REST server

# Launch REST server
export COCOSMAIL_REST_SERVER_LAUNCH=false

# REST server IP
export COCOSMAIL_REST_SERVER_IP="127.0.0.1"

# REST server port
export COCOSMAIL_REST_SERVER_PORT=8080

# REST server is TLS (https) ?
export COCOSMAIL_REST_SERVER_IS_TLS=false

# Login for HTTP auth
export COCOSMAIL_REST_SERVER_LOGIN="login"

# Passwd for HTTP auth
export COCOSMAIL_REST_SERVER_PASSWD="passwd"

##
# Microservices

# Called on new SMTP connection from client
export COCOSMAIL_MS_SMTPD_NEWCLIENT=""

# Called after HELO/EHLO command
export COCOSMAIL_MS_SMTPD_HELO=""

# Called after MAIL FROM command
export COCOSMAIL_MS_SMTPD_MAIL_FROM=""

# Called after RCPT TO to check if relay is granted for this RCPT TO
export COCOSMAIL_MS_SMTPD_RCPTTO=""

# Call after DATA command
export COCOSMAIL_MS_SMTPD_DATA=""

# smtpd before queueing: used to change envelope
export COCOSMAIL_MS_SMTPD_BEFORE_QUEUEING=""

#smtpd telemetry
export COCOSMAIL_MS_SMTPD_SEND_TELEMETRY=""

# Remote routes for deliverd
export COCOSMAIL_MS_DELIVERD_GET_ROUTES=""

# deliverd telemetry
export COCOSMAIL_MS_DELIVERD_SEND_TELEMETRY=""

##
# Openstack
# paste your rcfile here
export COCOSMAIL_OPENSTACK_ENABLE=false

# Auth url
export OS_AUTH_URL=https://auth.cloud.ovh.net/v2.0

# With the addition of Keystone we have standardized on the term **tenant**
# as the entity that owns the resources.
export OS_TENANT_ID=tenant
export OS_TENANT_NAME="name"

# In addition to the owning entity (tenant), openstack stores the entity
# performing the action as the **user**.
export OS_USERNAME="username"

# With Keystone you pass the keystone password.
#echo "Please enter your OpenStack Password: "
#read -sr OS_PASSWORD_INPUT
export OS_PASSWORD="passwd"

# If your configuration has multiple regions, we set that information here.
# OS_REGION_NAME is optional and only valid in certain environments.
export OS_REGION_NAME="GRA1"

##
# POP3 settings

# launch pop3d ? (default false)
export COCOSMAIL_POP3D_LAUNCH=true

# Defines dnsS for pop3d to launch
# Same format as for COCOSMAIL_SMTPD_DSNS
# WARNING: do not disable SSL for pop3d!!!
# Because user and password are sent in clear text!
# APOP and STLS are not supported (yet)
export COCOSMAIL_POP3D_DSNS="0.0.0.0:1100:pop.cocosmail.io:true:pop.cocosmail.io"

# Type of internal LDA to use.
# Can be "maildir" for internal maildir LDA
# or "dovecot" for external dovecot LDA
export COCOSMAIL_LDA_TYPE="maildir"

##
# Dovecot

# Dovecot LDA path if COCOSMAIL_LDA_TYPE="dovecot"
export COCOSMAIL_DOVECOT_LDA="/usr/lib/dovecot/dovecot-lda"



##
# plugin
# Export here env var need for your plugins

